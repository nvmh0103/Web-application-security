// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  password String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  role Role @default(User)
  phoneNumber String?
  profileImage String?
  review Reviews[]
  ownedRoom Rooms[]
  bookings Bookings[]
}

model Rooms{
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  approved Boolean @default(false)
  homeType String
  roomType String
  totalOccupancy Int?
  totalBedrooms Int?
  totalBathrooms Int?
  summary String?
  address String?
  hasTv Boolean?
  hasKitchen Boolean?
  hasAirCon Boolean?
  hasHeating Boolean?
  hasInternet Boolean?
  price Int
  rating Int
  pubishedAt DateTime @default(now())
  owner Users @relation(fields: [ownerId], references: [id])
  ownerId Int
  longtitude Float?
  latitude Float?
  location Locations @relation(fields: [locationId], references: [id])
  locationId Int
  pictures Medias[]
  bookings Bookings[]
  reviews Reviews[]
  totalReviews Int @default(0)
}

model Locations{
  id Int @id @default(autoincrement())
  displayName String
  name String
  latitude Float?
  longitude Float?
  rooms Rooms[]
}

model Medias{
  id Int @id @default(autoincrement())
  url String
  type MediaTypes
  room Rooms @relation(fields: [roomId], references: [id])
  roomId Int
}

model Bookings{
  id Int @id @default(autoincrement())
  startAt DateTime
  endAt DateTime
  paid Boolean @default(false)
  totalPrice Int
  status String
  userId Int
  user Users @relation(fields: [userId], references: [id])
  roomId Int
  room Rooms @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Reviews{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  rating Int
  comment String
  userId Int
  user Users @relation(fields: [userId], references: [id])
  roomId Int
  room Rooms @relation(fields: [roomId], references: [id])
}

enum Role{
  User
  Admin
  Host
}

enum MediaTypes{
  Thumbnail
  Image
}